openapi: 3.0.0
info:
  title: Rascaloid API
  description: The specification of Rascaloid API.
  license: EPL-2.0
  version: 0.1.0
servers:
  - url: 'http://localhost:3000'
    description: Development
tags:
  - name: project
    description: Project operations
  - name: stories
    description: Stories operations
  - name: task
    description: Tasks operations
  - name: iterations
    description: Iterations operations
paths:
  /projects:
    get:
      tags:
        - project
      summary: Finds projects
      parameters:
        - $ref: '#/components/parameters/bouncrCredential'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
        '400':
          description: Invalid status value
        '403':
          description: Permission denied
    post:
      tags:
        - project
      summary: Add a new project
      description: ''
      operationId: addProject
      parameters:
        - $ref: '#/components/parameters/bouncrCredential'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '405':
          description: Invalid input
  '/project/{projectId}':
    get:
      tags:
        - project
      summary: find an existing project
      operationId: findProject
      parameters:
        - $ref: '#/component/parameters/projectId'
        - $ref: '#/components/parameters/bouncrCredential'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
    put:
      tags:
        - project
      summary: Update an existing project
      description: ''
      operationId: updateProject
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      parameters:
        - name: projectId
          in: path
          description: ID of project to update
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Project not found
        '405':
          description: Validation exception
    delete:
      tags:
        - project
      summary: Delete an existing project
      operationId: deleteProject
      parameters:
        - name: projectId
          in: path
          description: ID of project to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '404':
          description: Project not found
  /project/{projectId}/stories:
    get:
      tags:
        - stories
      parameters:
        - $ref: '#/components/parameters/bouncrCredential'
        - $ref: '#/components/parameters/projectId'
      responses:
        '200':
          description: stories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Story'
    post:
      tags:
        - stories
      parameters:
        - $ref: '#/components/parameters/bouncrCredential'
        - $ref: '#/components/parameters/projectId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Story'
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Story'
  '/story/{storyId}':
    get:
      tags:
        - story
      parameters:
        - $ref: '#/components/parameters/bouncrCredential'
        - $ref: '#/components/parameters/storyId'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Story'
    put:
      tags:
        - story
      parameters:
        - $ref: '#/components/parameters/bouncrCredential'
        - $ref: '#/components/parameters/storyId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Story'
      responses:
        '204':
          description: successful
    delete:
      tags:
        - story
      parameters:
        - $ref: '#/components/parameters/bouncrCredential'
        - $ref: '#/components/parameters/storyId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Story'
      responses:
        '204':
          description: successful
  '/story/{storyId}/tasks':
    get:
      tags:
        - task
      parameters:
        - $ref: '#/components/parameters/bouncrCredential'
        - $ref: '#/components/parameters/storyId'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
    post:
      tags:
        - task
      parameters:
        - $ref: '#/components/parameters/bouncrCredential'
        - $ref: '#/components/parameters/storyId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '204':
          description: successful
  '/project/{projectId}/iterations':
    get:
      tags:
        - iterations
      parameters:
        - $ref: '#/components/parameters/bouncrCredential'
        - $ref: '#/components/parameters/projectId'
      responses:
        '200':
          description: iterations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Iteration'
    post:
      tags:
        - iterations
      parameters:
        - $ref: '#/components/parameters/bouncrCredential'
        - $ref: '#/components/parameters/projectId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Iteration'
      responses:
        '204':
          description: Successful
  /iteration/{iterationId}:
    get:
      tags:
        - iteration
      parameters:
        - $ref: '#/components/parameters/bouncrCredential'
        - $ref: '#/components/parameters/iterationId'
      responses:
        '200':
          description: iteration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Iteration'
  /iteration/{iterationId}/kanban:
    get:
      tags:
        - iteration
      parameters:
        - $ref: '#/components/parameters/bouncrCredential'
        - $ref: '#/components/parameters/iterationId'
      responses:
        '200':
          description: Get iteration stories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IterationStory'
  /iteration/{iterationId}/addStory/{storyId}:
    put:
      tags:
        - iteration
      parameters:
        - $ref: '#/components/parameters/bouncrCredential'
        - $ref: '#/components/parameters/iterationId'
        - $ref: '#/components/parameters/storyId'
      responses:
        '204':
          description: Successful
  /iteration/{iterationId}/removeStory/{storyId}:
    delete:
      tags:
        - iteration
      parameters:
        - $ref: '#/components/parameters/bouncrCredential'
        - $ref: '#/components/parameters/iterationId'
        - $ref: '#/components/parameters/storyId'
      responses:
        '204':
          description: Successful

  '/task/{taskId}':
    get:
      tags:
        - task
      parameters:
        - $ref: '#/components/parameters/bouncrCredential'
        - $ref: '#/components/parameters/taskId'
      responses:
        '200':
          description: task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
    put:
      tags:
        - task
      parameters:
        - $ref: '#/components/parameters/bouncrCredential'
        - $ref: '#/components/parameters/taskId'
      responses:
        '204':
          description: Successful
  /taskStatus:
    post:
      tags:
        - taskStatus
      parameters:
        - $ref: '#/components/parameters/bouncrCredential'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskStatus'
      responses:
        '204':
          description: Successful
components:
  schemas:
    Project:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
      example:
        name: project1
        description: Sample project
    Story:
      type: object
      properties:
        id:
          type: integer
          format: int64
        subject:
          type: string
        description:
          type: string
        point:
          type: number
          format: double
      example:
        subject: Story1
        description: Implements story1
        point: 5
    IterationStory:
      type: object
      properties:
        subject:
          type: string
        description:
          type: string
        point:
          type: number
          format: double
        developmentTasks:
          type: array
          items:
            $ref: '#/components/schemas/Task'
      example:
        subject: Story1
        description: Implements story1
        point: 5
    Task:
      type: object
      properties:
        id:
          type: integer
          format: int64
        subject:
          type: string
        description:
          type: string
        estimatedHours:
          type: number
          format: double
        status:
          $ref: '#/components/schemas/TaskStatus'
      example:
        subject: Create controller
        description: Create controller for development
        estimatedHours: 8
        status:
          id: 1
    Iteration:
      type: object
      properties:
        id:
          type: integer
          format: int64
        subject:
          type: string
        description:
          type: string
        startOn:
          type: string
          format: date
        endOn:
          type: string
          format: date
    TaskStatus:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        position:
          type: integer
          format: int32
      example:
        name: ToDo
        position: 1
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        account:
          type: string
  parameters:
    projectId:
      in: path
      name: projectId
      required: true
      schema:
        type: integer
        format: int64
    storyId:
      in: path
      name: storyId
      required: true
      schema:
        type: integer
        format: int64
    iterationId:
      in: path
      name: iterationId
      required: true
      schema:
        type: integer
        format: int64
    taskId:
      in: path
      name: taskId
      required: true
      schema:
        type: integer
        format: int64
    bouncrCredential:
      in: header
      name: X-Bouncr-Credential
      required: true
      schema:
        type: string
      description: bouncr credential
      example: >-
        eyJhbGciOiJub25lIiwidHlwIjoiSldUIn0.eyJzdWIiOiJ1c2VyMSIsIm5hbWUiOiJUZXN0IHVzZXIxIiwicGVybWlzc2lvbnMiOlsiUkVBRF9QUk9KRUNUIiwiV1JJVEVfUFJPSkVDVCJdfQ.YmnrzSdzEgVrUM8EWp4yQSE-AfOnG3kzscksuSCJFSQ
